
import java.awt.Color;
import java.awt.event.*;
import java.awt.Rectangle;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mansi
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    int charLen = 0;
	int reached = 0;
	boolean flag = false;
	boolean flagStartRace = false;
    boolean flagEndRace = false;
	String typedChars = "";
	int numTypedChars = 0;
    long startMilis,currentMilis;
    public NewJFrame() 
	{
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        textField1 = new java.awt.TextField();
        jButton1 = new javax.swing.JButton();
        textField2 = new java.awt.TextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setBackground(new java.awt.Color(255, 255, 255));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Open Sans Semibold", 1, 18)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(25, 0, 255));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
		jTextArea1.setEditable(false);

        jScrollPane1.setViewportView(jTextArea1);

        textField1.setBackground(new java.awt.Color(255, 255, 255));
        textField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textField1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textField1.setName(""); // NOI18N
        textField1.setText("");
		textField1.setEditable(false);
        textField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textField1MouseClicked(evt);
            }
        });
        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });
        textField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) 
            {
                //if (Character.isDigit(evt.getKeyChar()))
                              
                textField1KeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                int key = evt.getKeyCode();
                if(key == KeyEvent.VK_KP_LEFT || key == KeyEvent.VK_LEFT || key == KeyEvent.VK_RIGHT ||key == KeyEvent.VK_KP_RIGHT)
                {
                    evt.consume();
                }
            }
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                int key = evt.getKeyCode();
                 if(key == KeyEvent.VK_KP_LEFT || key == KeyEvent.VK_LEFT || key == KeyEvent.VK_RIGHT ||key == KeyEvent.VK_KP_RIGHT)
                {
                    evt.consume();
                }
            }
        });

        jButton1.setText("Start");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        textField2.setBackground(new java.awt.Color(255, 255, 255));
        textField2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textField2.setText("WPM: ");
		textField2.setEditable(false);

        jProgressBar1.setValue(0);
        jProgressBar1.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(102, 102, 102)
                                .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(316, 316, 316)
                                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 342, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textField1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//checked!!!!! 
	{//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        GenerateQuote.populateQuotes();
        String temp;
        temp = new String(GenerateQuote.getQuote());
        jTextArea1.setText(temp);
        jButton1.setText("Next");
		textField1.setForeground(Color.black);
	    textField1.setText("Start Typing Here");
		textField2.setText("WPM:");
		textField1.setEditable(true);
		flagStartRace = true;
        flagEndRace = false;
        typedChars = "";
        numTypedChars = 0;
        jProgressBar1.setValue(0);
        // start timer now!        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_textField1ActionPerformed

    private void textField1MouseClicked(java.awt.event.MouseEvent evt) 
	{//GEN-FIRST:event_textField1MouseClicked
		if(flagStartRace == true)
		{
			startMilis = System.currentTimeMillis();
			flagStartRace = false;
        	textField1.setText("");
		}
        // Start timer. 
    }//GEN-LAST:event_textField1MouseClicked
    

	private void textField1KeyTyped(java.awt.event.KeyEvent evt) 
	{
        if(flagEndRace) return;       
		String quote = jTextArea1.getText();
        String inText = textField1.getText();
		
		if(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE )
		{ 
				if (inText.length() > 0 && typedChars.length() > 0 ) 
				{
                    System.out.println("Backspace typed!");
                    numTypedChars--; 
   				    typedChars = typedChars.substring(0, typedChars.length()-1);
  				}			  	
		}
		else 
        {
            numTypedChars++;
            typedChars += evt.getKeyChar();
		}	

        //textField1.setCaretPosition(inText.length());
		currentMilis = System.currentTimeMillis();
		
//		System.out.println("Typed:  "+typed +"Quote:" + quote.substring(0,typed.length()));		
		//if(reached>0) System.out.println("-->"+typed.charAt(reached-1)+"-->"+quote.charAt(reached-1)+"-->"+reached);	
		
		if(typedChars.length() <= quote.length())
		{
            System.out.println(quote.substring(0,numTypedChars)+"//" + typedChars);
			if( quote.substring(0,numTypedChars).compareTo(typedChars) != 0)
			{ 
				textField1.setForeground(Color.red);
                System.out.println("Red from 1");
				flag = false;			
			}
			else 
			{
				textField1.setForeground(Color.green);
				reached = typedChars.length();
	  			flag = true;
			}
		}   		
		else if(typedChars.length() == quote.length()+1 && flag == true)
		{
		 	if(evt.getKeyChar()==' ' || evt.getKeyChar()=='\n')
			{
				textField1.setText("");
				textField1.setEditable(false);
				textField1.setForeground(Color.black);
				reached = typedChars.length();
                flag = true;
                flagEndRace = true;
			}
			else
			{
				textField1.setForeground(Color.red);
                System.out.println("Red from 2");
				flag = false;
			}
		}
		else 
		{
			textField1.setForeground(Color.red);///////////////////////////////
			System.out.println("Red from 3");
            flag = false;
		}
		if(evt.getKeyChar()==' ' && flag == true)
        {
            textField1.setText(""); 
        }   

	   	int seconds = (int)(currentMilis - startMilis)/1000;
        double words = (double) (reached)/5;
	   	textField2.setText("WPM:" + (int)((words/seconds)*60));

        jProgressBar1.setValue( (reached*100) / (quote.length()+1));
	}////end 

	/*private void textField1KeyTyped(java.awt.event.KeyEvent evt) 
	{
		currentMilis = System.currentTimeMillis();
		        
		String quote = jTextArea1.getText();
        String typed = textField1.getText();
	
		
//		System.out.println("Typed:  "+typed +"Quote:" + quote.substring(0,typed.length()));		
		//if(reached>0) System.out.println("-->"+typed.charAt(reached-1)+"-->"+quote.charAt(reached-1)+"-->"+reached);	
		
		if(typed.length() <= quote.length())
		{
			if( quote.substring(0,typed.length()).compareTo(typed) != 0)
			{ 
				textField1.setForeground(Color.red);
				flag = false;			
			}
			else 
			{
				textField1.setForeground(Color.green);
				reached = typed.length();
	  			flag = true;
			}
		}   		
		else if(typed.length() == quote.length()+1 && flag == true)
		{
		 	if(evt.getKeyChar()==' ' || evt.getKeyChar()=='\n')
			{
				textField1.setText("");
				textField1.setEditable(false);
				textField1.setForeground(Color.black);
				reached = typed.length();
			}
			else
			{
				textField1.setForeground(Color.red);
				flag = false;
			}
		}
		else 
		{
			textField1.setForeground(Color.red);///////////////////////////////
			flag = false;
		}
		
	   	int seconds = (int)(currentMilis - startMilis)/1000;
        double words = (double) (reached)/5;
	   	textField2.setText("WPM:" + ((words/seconds)*60));
	}////end */


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
	{            
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    // End of variables declaration//GEN-END:variables
    Boolean success = false;
}
